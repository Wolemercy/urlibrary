stages:
  - test
  - deploy

  Test:
    stage: test
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:12.3-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Set up Python 3.8.5
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Make migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          coverage run --include="./*/*" --omit="./manage.py" manage.py test
          coverage report -m
          coverage xml -i
        artifacts:
          paths:
            - coverage.xml
        env:
          SYSTEM_ENV: GITHUB_WORKFLOW

Deployment:
  image: ruby:latest
  stage: deploy
  before_script:
    - gem install dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  environment:
    name: main
    url: $HEROKU_APP_HOST
  only:
    - main